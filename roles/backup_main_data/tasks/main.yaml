---
# - name: Update known_hosts
#   ansible.builtin.import_role:
#     name: common
#     tasks_from: make_host_known

- name: Check if external hard drive is mounted
  ansible.builtin.command: mount | grep /mnt/externalhdd
  register: mount_check
  changed_when: false
  failed_when: false
- name: Print mount check result
  ansible.builtin.debug:
    var: mount_check
- name: Check if external hard drive is mounted
  ansible.builtin.debug:
    msg: "External hard drive is mounted"
  when: mount_check.rc == 1
- name: Check if external hard drive is not mounted
  ansible.builtin.debug:
    msg: "External hard drive is not mounted"
  when: mount_check.rc == 0

- name: mount external hard drive
  ansible.posix.mount:
    path: /mnt/externalhdd
    src: "UUID={{ lookup('ansible.builtin.env', 'EXTERNAL_HDD_UUID') }}"
    fstype: ext4
    state: mounted

- name: Create backup directory based on current date {{ ansible_date_time.date }}
  ansible.builtin.file:
    path: "/mnt/externalhdd/backup/{{ ansible_date_time.date }}"
    state: directory

- name: Copy main data to external hard drive
  ansible.builtin.command: sudo rsync -rhviuat --exclude 'appdata*/' --exclude '*trashbin*/' --exclude '*thumbnails/' /mnt/maindata/ /mnt/externalhdd/backup/{{ ansible_date_time.date }}
  register: rsync_result
  changed_when: rsync_result.rc != 0
  failed_when: rsync_result.rc != 0
- name: Print rsync result
  ansible.builtin.debug:
    var: rsync_result
- name: Check if rsync was successful
  ansible.builtin.debug:
    msg: "Rsync was successful"
  when: rsync_result.rc == 0
- name: Unmount external hard drive
  ansible.posix.mount:
    path: /mnt/externalhdd
    src: "UUID={{ lookup('ansible.builtin.env', 'EXTERNAL_HDD_UUID') }}"
    fstype: ext4
    state: unmounted
- name: Check if external hard drive is unmounted
  ansible.builtin.debug:
    msg: "External hard drive is unmounted"
  when: mount_check.rc == 0
- name: Check if external hard drive is not unmounted
  ansible.builtin.debug:
    msg: "External hard drive is not unmounted"
  when: mount_check.rc == 1


